//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.03.29 at 02:39:59 PM CEST 
//


package org.geotoolkit.metadata.dimap.spotscene;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SM_Processing_Types.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SM_Processing_Types">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="F-INTERPOLATION"/>
 *     &lt;enumeration value="F-INTERPOLATION-CONVOLUTION"/>
 *     &lt;enumeration value="W-ALL"/>
 *     &lt;enumeration value="F-INTERPOLATION-W-CONVOLUTION-DENOISING"/>
 *     &lt;enumeration value="F-INTERPOLATION-CONVOLUTION-W-DENOISING"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "SM_Processing_Types")
@XmlEnum
public enum SMProcessingTypes {

    @XmlEnumValue("F-INTERPOLATION")
    F_INTERPOLATION("F-INTERPOLATION"),
    @XmlEnumValue("F-INTERPOLATION-CONVOLUTION")
    F_INTERPOLATION_CONVOLUTION("F-INTERPOLATION-CONVOLUTION"),
    @XmlEnumValue("W-ALL")
    W_ALL("W-ALL"),
    @XmlEnumValue("F-INTERPOLATION-W-CONVOLUTION-DENOISING")
    F_INTERPOLATION_W_CONVOLUTION_DENOISING("F-INTERPOLATION-W-CONVOLUTION-DENOISING"),
    @XmlEnumValue("F-INTERPOLATION-CONVOLUTION-W-DENOISING")
    F_INTERPOLATION_CONVOLUTION_W_DENOISING("F-INTERPOLATION-CONVOLUTION-W-DENOISING");
    private final String value;

    SMProcessingTypes(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SMProcessingTypes fromValue(String v) {
        for (SMProcessingTypes c: SMProcessingTypes.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
