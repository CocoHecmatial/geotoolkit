/*
 *    Geotoolkit - An Open Source Java GIS Toolkit
 *    http://www.geotoolkit.org
 *
 *    (C) 2011-2013, Geomatys
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotoolkit.db.reverse;

/**
 * Description of a table column.
 * 
 * @author Johann Sorel (Geomatys)
 */
public class ColumnMetaModel {
    
    public static enum Type{
        /** value is automaticaly generated by the database */
        AUTO,
        /** value will not be generated by the database, must be provided */
        NON_INCREMENTING,
        /** value is automaticaly generated by the database using a sequence */
        SEQUENCED
    }
    
    private final String name;
    private final int sqlType;
    private final String sqlTypeName;
    private final Class clazz;
    private final Type type;

    /**
     * @param name column name
     * @param sqlType sql type 
     * @param sqlTypeName sql type name
     * @param clazz best java matching type
     * @param type if column is a primary key column, define how value is found
     */
    public ColumnMetaModel(String name, int sqlType, String sqlTypeName, Class clazz, Type type) {
        this.name = name;
        this.sqlType = sqlType;
        this.sqlTypeName = sqlTypeName;
        this.clazz = clazz;
        this.type = type;
    }

    public String getName() {
        return name;
    }

    public int getSqlType() {
        return sqlType;
    }

    public String getSqlTypeName() {
        return sqlTypeName;
    }

    public Class getJavaType() {
        return clazz;
    }

    public Type isType() {
        return type;
    }
    
    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder(name);
        sb.append('[');
        sb.append(sqlType);
        sb.append(',');
        sb.append(sqlTypeName);
        sb.append(',');
        sb.append(type);
        sb.append(']');
        return sb.toString();
    }
    
}
