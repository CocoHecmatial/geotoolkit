/*
 *    Geotoolkit - An Open Source Java GIS Toolkit
 *    http://www.geotoolkit.org
 *
 *    (C) 2012 Geomatys
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotoolkit.gui.swing.propertyedit.styleproperty.simple;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.net.MalformedURLException;
import java.util.logging.Level;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.LayoutStyle.ComponentPlacement;
import org.geotoolkit.gui.swing.resource.MessageBundle;
import org.geotoolkit.gui.swing.style.JPreview;
import org.geotoolkit.gui.swing.style.StyleElementEditor;
import org.geotoolkit.map.MapLayer;
import org.opengis.style.ExternalGraphic;

/**
 * External graphic pane editor
 * @author Fabien RÃ©tif (Geomatys)
 * @author Johann Sorel (Geomatys)
 */
public class JExternalGraphicPane extends StyleElementEditor<ExternalGraphic> {
    
    private MapLayer layer = null;   
    private File currentImage = null;

    /**
     * Creates new form JExternalGraphicPane
     */
    public JExternalGraphicPane() {
        super(ExternalGraphic.class);
        initComponents();
    }
    
    /**
     * {@inheritDoc }
     */
    @Override
    public void setLayer(final MapLayer layer) {
        this.layer = layer;         
    }

    /**
     * {@inheritDoc }
     */
    @Override
    public MapLayer getLayer(){
        return layer;
    }
    
    /**
     * {@inheritDoc }
     */
    @Override
    public void parse(final ExternalGraphic externalGraphic) {
        if (externalGraphic != null) {           
           guiOverviewLabel.parse(externalGraphic);            
        }
    }

    /**
     * {@inheritDoc }
     * This method creates an ExternalGraphic object from the file selection. If the file path can not be resolved, we return null.
     */
    @Override
    public ExternalGraphic create() {

        if (this.currentImage != null) {
            try {
                return getStyleFactory().externalGraphic(this.currentImage.toURI().toURL(), "");
            } catch (MalformedURLException ex) {
                LOGGER.log(Level.INFO, ex.getMessage());
                return null;
            }
        } else {
            return null;
        }
    } 
    
     public void clearSelectedTarget() {
        currentImage = null;
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new JLabel();
        guiOverviewLabel = new JPreview();
        jButton1 = new JButton();

        setMaximumSize(new Dimension(0, 0));

        jLabel1.setText(MessageBundle.getString("fromFile")); // NOI18N

        GroupLayout guiOverviewLabelLayout = new GroupLayout(guiOverviewLabel);
        guiOverviewLabel.setLayout(guiOverviewLabelLayout);
        guiOverviewLabelLayout.setHorizontalGroup(
            guiOverviewLabelLayout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        guiOverviewLabelLayout.setVerticalGroup(
            guiOverviewLabelLayout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 119, Short.MAX_VALUE)
        );

        jButton1.setText(MessageBundle.getString("chooseImage")); // NOI18N
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(guiOverviewLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(guiOverviewLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final JFileChooser jFile = new JFileChooser();
        if (jFile.showOpenDialog(null)== JFileChooser.APPROVE_OPTION) {
            this.currentImage = jFile.getSelectedFile();
            //We plot preview image
            parse(create());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPreview guiOverviewLabel;
    private JButton jButton1;
    private JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
