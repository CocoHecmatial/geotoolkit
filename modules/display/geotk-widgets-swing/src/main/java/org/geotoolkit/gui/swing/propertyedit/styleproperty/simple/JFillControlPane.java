/*
 *    Geotoolkit - An Open Source Java GIS Toolkit
 *    http://www.geotoolkit.org
 *
 *    (C) 2008 - 2009, Johann Sorel
 *    (C) 2012 Geomatys
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotoolkit.gui.swing.propertyedit.styleproperty.simple;

import javax.swing.JOptionPane;
import org.geotoolkit.gui.swing.style.StyleElementEditor;
import org.geotoolkit.map.MapLayer;
import org.opengis.style.Fill;

/**
 * Fill control panel. This class displays a simple controller panel with a preview image and a button
 * @author Fabien RÃ©tif (Geomatys)
 */
public class JFillControlPane extends StyleElementEditor<Fill> {

    private MapLayer layer = null;   
    private JFillPane paneFillChooser = new JFillPane();

    /** 
     * Creates new form JFillControlPanel 
     */
    public JFillControlPane() {
        super(Fill.class);
        initComponents();          
    }

    /**
     * {@inheritDoc }
     */
    @Override
    public void setLayer(final MapLayer layer) {
        this.layer = layer;        
    }

    /**
     * {@inheritDoc }
     */
    @Override
    public MapLayer getLayer(){
        return layer;
    }
    
    /**
     * {@inheritDoc }
     */
    @Override
    public void parse(final Fill fill) {
        
        if (fill != null) {
                
            guiColorLabel.parse(fill);
            paneFillChooser.parse(fill);           
        }
    }

    /**
     * {@inheritDoc }
     */
    @Override
    public Fill create() {
        return paneFillChooser.create();
    }  
    
    public void setActive(Boolean bool)
    {       
        guiColorButton.setEnabled(bool);
        guiColorLabel.setVisible(bool);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        guiColorButton = new javax.swing.JButton();
        guiColorLabel = new org.geotoolkit.gui.swing.style.JPreview();

        setBackground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(250, 30));
        setLayout(new java.awt.BorderLayout());

        guiColorButton.setText("Changer");
        guiColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guiColorButtonActionPerformed(evt);
            }
        });
        add(guiColorButton, java.awt.BorderLayout.EAST);

        guiColorLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guiColorLabelMouseClicked(evt);
            }
        });
        add(guiColorLabel, java.awt.BorderLayout.WEST);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This function displays a message dialog in order to select how fill the form.
     * @param evt 
     */
    private void guiColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guiColorButtonActionPerformed
        // TODO add your handling code here:        
        JOptionPane.showMessageDialog(null,paneFillChooser,"",JOptionPane.PLAIN_MESSAGE);
        firePropertyChange(PROPERTY_TARGET, null, create());  
        parse(create());
        
    }//GEN-LAST:event_guiColorButtonActionPerformed
    /**
     * This function displays a message dialog in order to select how fill the form.
     * @param evt 
     */
    private void guiColorLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guiColorLabelMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,paneFillChooser,"",JOptionPane.PLAIN_MESSAGE);
        firePropertyChange(PROPERTY_TARGET, null, create());  
        parse(create());
    }//GEN-LAST:event_guiColorLabelMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton guiColorButton;
    private org.geotoolkit.gui.swing.style.JPreview guiColorLabel;
    // End of variables declaration//GEN-END:variables
   
}
