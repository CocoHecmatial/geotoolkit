/*
 *    Geotoolkit - An Open Source Java GIS Toolkit
 *    http://www.geotoolkit.org
 *
 *    (C) 2008 - 2009, Johann Sorel
 *    (C) 2011 Geomatys
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotoolkit.gui.swing.propertyedit.styleproperty.simple;

import java.awt.Color;
import java.awt.Dimension;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JLabel;
import org.geotoolkit.gui.swing.style.JNumberExpressionPane;
import org.geotoolkit.gui.swing.style.StyleElementEditor;
import org.opengis.style.Halo;

/**
 * Text halo editor
 * @author Fabien RÃ©tif
 */
public class JHaloPane extends StyleElementEditor<Halo> {

    /**
     * Creates new form JHaloPane
     */
    public JHaloPane() {
        super(Halo.class);
        initComponents();
        guiHaloFillPane.setBackground(getBackground());
        guiRadius.setModel(0d, 0d, Double.POSITIVE_INFINITY, 1d);
        guiRadius.setExpressionUnvisible();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        jLabel9 = new JLabel();
        guiRadius = new JNumberExpressionPane();

        setBackground(new Color(204, 204, 204));
        setMaximumSize(new Dimension(625, 32767));
        setPreferredSize(new Dimension(625, 156));
        setSize(new Dimension(625, 0));

        jLabel6.setText("Halo :");
        add(jLabel6);

        jLabel7.setText("Rayon :");
        add(jLabel7);

        jLabel9.setText("Couleur :");
        add(jLabel9);

        guiRadius.addPropertyChangeListener(new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                JHaloPane.this.propertyChange(evt);
            }
        });
        add(guiRadius);
    }// </editor-fold>//GEN-END:initComponents

    private void propertyChange(PropertyChangeEvent evt) {//GEN-FIRST:event_propertyChange
        // TODO add your handling code here:
        firePropertyChange(PROPERTY_TARGET, null, create());
    }//GEN-LAST:event_propertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JNumberExpressionPane guiRadius;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel9;
    // End of variables declaration//GEN-END:variables

    @Override
    public void parse(Halo target) {
        
        if(target!= null) {
            guiRadius.parse(target.getRadius());
            guiHaloFillPane.parse(target.getFill());
        }        
    }

    @Override
    public Halo create() {        
        return getStyleFactory().halo(guiHaloFillPane.create(), guiRadius.create());
    }
}
