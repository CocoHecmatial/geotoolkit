/*
 *    Geotoolkit - An Open Source Java GIS Toolkit
 *    http://www.geotoolkit.org
 *
 *    (C) 2008 - 2009, Johann Sorel
 *    (C) 2011 Geomatys
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotoolkit.gui.swing.propertyedit.styleproperty.simple;

import java.awt.Color;
import java.awt.event.ComponentEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JLabel;
import org.geotoolkit.gui.swing.style.JNumberExpressionPane;
import org.geotoolkit.gui.swing.style.JUOMPane;
import org.geotoolkit.gui.swing.style.StyleElementEditor;
import org.geotoolkit.map.MapLayer;
import org.geotoolkit.style.StyleConstants;
import org.opengis.style.PolygonSymbolizer;

/**
 * PolygonSymbolizer editor
 * @author Fabien Rétif
 */
public class JPolygonSymbolizerPane extends  StyleElementEditor<PolygonSymbolizer>  {

    private MapLayer layer = null;
    
    /** 
     * Creates new form JPolygonSymbolizerPane and sets range of number component
     */
    public JPolygonSymbolizerPane() {
        super(PolygonSymbolizer.class);
        initComponents();
        guiOffset.setModel(0d, 0d, Double.POSITIVE_INFINITY, 1d);
        guiDisplacementX.setModel(0d, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, 1d);
        guiDisplacementY.setModel(0d, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, 1d);
        guiDisplacementX.setExpressionUnvisible();
        guiDisplacementY.setExpressionUnvisible();
        guiOffset.setExpressionUnvisible();        
    }
    
    /**
     * {@inheritDoc }
     */
    @Override
    public void setLayer(final MapLayer layer){
        this.layer = layer;
        
//        guiFillControlPane.setLayer(layer);
        guiDisplacementY.setLayer(layer);
        guiDisplacementX.setLayer(layer);
//        guiStrokeControlPane.setLayer(layer);
        guiUOM.setLayer(layer); 
    }
    
    /**
     * {@inheritDoc }
     */
    @Override
    public MapLayer getLayer(){
        return layer;
    }
 
    /**
     * {@inheritDoc }
     */
    @Override
    public void parse(final PolygonSymbolizer symbol) {

        if (symbol != null) {

//            guiStrokeControlPane.parse(symbol.getStroke());
//            guiFillControlPane.parse(symbol.getFill());
            guiDisplacementX.parse(symbol.getDisplacement().getDisplacementX());
            guiDisplacementY.parse(symbol.getDisplacement().getDisplacementY());
            guiOffset.parse(symbol.getPerpendicularOffset());
            guiUOM.parse(symbol.getUnitOfMeasure());            
//            guiGeom.setGeom(symbol.getGeometryPropertyName());          
        }
    }

    /**
     * {@inheritDoc }
     */
    @Override
    public PolygonSymbolizer create(){
        return null;
//        return getStyleFactory().polygonSymbolizer(
//                    "polygonSymbolizer",
//                    (String)null,
//                    StyleConstants.DEFAULT_DESCRIPTION,
//                    guiUOM.create(),
////                    guiStrokeControlPane.create(),
////                    guiFillControlPane.create(), 
//                    getStyleFactory().displacement(guiDisplacementX.create(),guiDisplacementY.create()),
//                    guiOffset.create());
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new JLabel();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        jLabel10 = new JLabel();
        guiBorderLabel = new JLabel();
        guiDisplacementX = new JNumberExpressionPane();
        guiDisplacementY = new JNumberExpressionPane();
        guiOffset = new JNumberExpressionPane();
        guiOffsetLabel = new JLabel();
        jLabel7 = new JLabel();
        guiUOM = new JUOMPane();

        setBackground(new Color(204, 204, 204));

        jLabel2.setText("Remplissage de la forme :");
        add(jLabel2);

        jLabel5.setText("Décallage X :");
        add(jLabel5);

        jLabel6.setText("Décallage Y :");
        add(jLabel6);

        jLabel10.setText("Bordure de la forme :");
        add(jLabel10);
        add(guiBorderLabel);

        guiDisplacementX.addPropertyChangeListener(new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                JPolygonSymbolizerPane.this.propertyChange(evt);
            }
        });
        add(guiDisplacementX);

        guiDisplacementY.addPropertyChangeListener(new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                JPolygonSymbolizerPane.this.propertyChange(evt);
            }
        });
        add(guiDisplacementY);
        add(guiOffset);

        guiOffsetLabel.setText("Largeur :");
        add(guiOffsetLabel);

        jLabel7.setText("Unité :");
        add(jLabel7);
        add(guiUOM);
    }// </editor-fold>//GEN-END:initComponents

    private void propertyChange(PropertyChangeEvent evt) {//GEN-FIRST:event_propertyChange
        // TODO add your handling code here:
        if (PROPERTY_TARGET.equalsIgnoreCase(evt.getPropertyName())) {
            firePropertyChange(PROPERTY_TARGET, null, create());
        }
    }//GEN-LAST:event_propertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel guiBorderLabel;
    private JNumberExpressionPane guiDisplacementX;
    private JNumberExpressionPane guiDisplacementY;
    private JNumberExpressionPane guiOffset;
    private JLabel guiOffsetLabel;
    private JUOMPane guiUOM;
    private JLabel jLabel10;
    private JLabel jLabel2;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    // End of variables declaration//GEN-END:variables

    public void componentHidden(ComponentEvent e) {
        System.out.println(e.getComponent().getClass().getName() + " --- Hidden");
    }

}
