/*
 *    Geotoolkit - An Open Source Java GIS Toolkit
 *    http://www.geotoolkit.org
 *
 *    (C) 2012 Geomatys
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.geotoolkit.gui.swing.style;

import javax.swing.DefaultBoundedRangeModel;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JSlider;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.geotoolkit.map.MapLayer;
import org.opengis.filter.expression.Expression;

/**
 * Slider and spinner component.
 * @author Fabien RÃ©tif (Geomatys)
 * @module pending
 */
public class JNumberSliderExpressionPane extends StyleElementEditor<Expression>{

    /** Creates new form JColorExpressionPane */
    public JNumberSliderExpressionPane() {
        super(Expression.class);
        initComponents();
    }

    public void setModel(final int value, final int min, final int max, final int step){
        guiNumber.setModel(new SpinnerNumberModel(value, min, max, step));
        guiSlider.setModel(new DefaultBoundedRangeModel(value,step,min,max));
        guiSlider.setMinorTickSpacing(min);
        guiSlider.setMajorTickSpacing(max);
    }
    
    @Override
    public void setLayer(final MapLayer layer) {
        super.setLayer(layer);        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        guiNumber = new JSpinner();
        guiSlider = new JSlider();

        setOpaque(false);

        guiNumber.setModel(new SpinnerNumberModel());

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, guiSlider, org.jdesktop.beansbinding.ELProperty.create("${value}"), guiNumber, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        guiNumber.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                guiNumberStateChanged(evt);
            }
        });

        guiSlider.setPaintLabels(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, guiNumber, org.jdesktop.beansbinding.ELProperty.create("${value}"), guiSlider, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guiSlider, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(guiNumber, GroupLayout.PREFERRED_SIZE, 75, GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addComponent(guiSlider, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addComponent(guiNumber, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

private void guiNumberStateChanged(final ChangeEvent evt) {//GEN-FIRST:event_guiNumberStateChanged
    firePropertyChange(PROPERTY_TARGET, null, create());
}//GEN-LAST:event_guiNumberStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JSpinner guiNumber;
    private JSlider guiSlider;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    public void parse(final Expression target) {
        if(target != null){
            if(isStatic(target)){
                final Number value = target.evaluate(null, Number.class);
                if(value != null){                    
                    guiNumber.setValue(value.intValue());
                } 
            }
        }
        
    }

    @Override
    public Expression create() {        
            return getFilterFactory().literal( ((SpinnerNumberModel)guiNumber.getModel()).getNumber());        
    }
    
}
