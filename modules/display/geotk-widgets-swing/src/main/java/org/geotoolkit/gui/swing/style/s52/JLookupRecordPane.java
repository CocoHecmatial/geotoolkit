/*
 *    Geotoolkit - An Open Source Java GIS Toolkit
 *    http://www.geotoolkit.org
 *
 *    (C) 2013, Geomatys
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 2.1 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */

package org.geotoolkit.gui.swing.style.s52;

import java.awt.Component;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import javax.swing.ButtonGroup;
import javax.swing.GroupLayout;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import org.geotoolkit.gui.swing.resource.MessageBundle;
import org.geotoolkit.s52.lookuptable.IMODisplayCategory;
import org.geotoolkit.s52.lookuptable.LookupRecord;
import org.jdesktop.swingx.combobox.ListComboBoxModel;

/**
 * Lookup record configuration.
 *
 * @author Johann Sorel (Geomatys)
 */
public class JLookupRecordPane extends javax.swing.JPanel {

    private final LookupRecord record;

    public JLookupRecordPane(final LookupRecord record) {
        initComponents();
        this.record = record;

        guiObjectClass.setText(record.getObjectClass());
        final List dcs = Arrays.asList(IMODisplayCategory.values());
        guiDisplayCategory.setModel(new ListComboBoxModel(dcs));
        guiDisplayCategory.setSelectedItem(record.getDisplayCategory());
        if(record.getViewingGroup()!=null){
            guiViewingGroup.setValue(record.getViewingGroup());
        }
        if(record.getPriority()!=null){
            guiPriority.setValue(record.getPriority());
        }

        if(record.getRadar() == LookupRecord.Radar.O){
            guiRadarOver.setSelected(true);
        }else if(record.getRadar() == LookupRecord.Radar.S){
            guiRadarUnder.setSelected(true);
        }else if(record.getRadar() == LookupRecord.Radar.NULL){
            guiRaderNull.setSelected(true);
        }

        final Map<String,String> atts = record.getAttributeCombinaison();
        final Object[][] datas = new Object[atts.size()][2];
        int i=0;
        for(Entry<String,String> att : atts.entrySet()){
            datas[i][0] = att.getKey();
            datas[i][1] = att.getValue();
            i++;
        }

        guiAttributeTable.setModel(new DefaultTableModel(datas, new Object[]{"",""}));
        guiAttributeTable.setTableHeader(null);

        guiSymbolInstructions.setText(record.getSymbolInstructions());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        guiRadarGroup = new ButtonGroup();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        guiObjectClass = new JTextField();
        guiDisplayCategory = new JComboBox();
        guiViewingGroup = new JSpinner();
        guiPriority = new JSpinner();
        guiRadarOver = new JRadioButton();
        guiRadarUnder = new JRadioButton();
        guiRaderNull = new JRadioButton();
        jScrollPane1 = new JScrollPane();
        guiSymbolInstructions = new JTextArea();
        jScrollPane2 = new JScrollPane();
        guiAttributeTable = new JTable();

        jLabel1.setText(MessageBundle.getString("s52.category")); // NOI18N

        jLabel2.setText(MessageBundle.getString("s52.priority")); // NOI18N

        jLabel3.setText(MessageBundle.getString("s52.radar")); // NOI18N

        jLabel4.setText(MessageBundle.getString("s52.viewinggroup")); // NOI18N

        jLabel5.setText(MessageBundle.getString("s52.class")); // NOI18N

        jLabel6.setText(MessageBundle.getString("s52.symbolinstructions")); // NOI18N

        jLabel7.setText(MessageBundle.getString("s52.attributefilter")); // NOI18N

        guiObjectClass.setEditable(false);
        guiObjectClass.setEnabled(false);

        guiDisplayCategory.setEnabled(false);

        guiViewingGroup.setEnabled(false);

        guiPriority.setEnabled(false);

        guiRadarGroup.add(guiRadarOver);
        guiRadarOver.setText(MessageBundle.getString("s52.radarover")); // NOI18N
        guiRadarOver.setEnabled(false);

        guiRadarGroup.add(guiRadarUnder);
        guiRadarUnder.setText(MessageBundle.getString("s52.radarunder")); // NOI18N
        guiRadarUnder.setEnabled(false);

        guiRadarGroup.add(guiRaderNull);
        guiRaderNull.setText(MessageBundle.getString("s52.radarnull")); // NOI18N
        guiRaderNull.setEnabled(false);

        guiSymbolInstructions.setEditable(false);
        guiSymbolInstructions.setColumns(20);
        guiSymbolInstructions.setRows(5);
        guiSymbolInstructions.setEnabled(false);
        jScrollPane1.setViewportView(guiSymbolInstructions);

        guiAttributeTable.setEnabled(false);
        jScrollPane2.setViewportView(guiAttributeTable);

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guiObjectClass))
                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guiDisplayCategory, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(guiViewingGroup, GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(guiPriority)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(guiRadarOver)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(guiRadarUnder)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(guiRaderNull))
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );

        layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7});

        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(guiObjectClass, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(guiDisplayCategory, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(guiViewingGroup, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(guiPriority, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(guiRadarOver)
                    .addComponent(guiRadarUnder)
                    .addComponent(guiRaderNull))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 86, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTable guiAttributeTable;
    private JComboBox guiDisplayCategory;
    private JTextField guiObjectClass;
    private JSpinner guiPriority;
    private ButtonGroup guiRadarGroup;
    private JRadioButton guiRadarOver;
    private JRadioButton guiRadarUnder;
    private JRadioButton guiRaderNull;
    private JTextArea guiSymbolInstructions;
    private JSpinner guiViewingGroup;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
