<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book [
  <!ENTITY % book.entities SYSTEM "../../../book.entities">
  %book.entities;
]>
<section xmlns="http://docbook.org/ns/docbook" version="5.0"
         xmlns:xlink = "http://www.w3.org/1999/xlink"
	 lang="en">

    <title>IGN RM services</title>

    <example>
        <title>Connecting to the IGN services</title>

        <link xlink:href="https://raw.githubusercontent.com/Geomatys/geotoolkit/master/demos/geotk-demo-samples/src/main/java/org/geotoolkit/pending/demo/clients/ignrm/IGNClientDemo.java">
            <acronym>geotoolkit/demos/geotk-demo-samples/src/main/java/org/geotoolkit/pending/demo/clients/ignrm/IGNClientDemo.java </acronym>
        </link>
    </example>

    <para>
        The Institut GÃ©ographique National (IGN) of France provides a number of services in accordance with the European Directive
        <link xlink:href="http://www.inspire-geoportal.eu/">INSPIRE</link>.
    </para>

    <para>
        However, you need have an account to access at their services :
        <link xlink:href="https://api.ign.fr/geoportail">To get an account</link>
    </para>

    <para>
        The connection to IGN service is performed using authentification with
	<emphasis>Token</emphasis> and
	<emphasis>Referer</emphasis>.
    </para>

    <para>
        We can have among the services available and according to the contract signed :

        <itemizedlist>
            <listitem>WMS : for maps</listitem>
            <listitem>WMS-C : for tiles</listitem>
            <listitem>OpenLS : for localization sercies</listitem>
        </itemizedlist>
    </para>

    <example>
        <title>Connecting code to the IGN service</title>
        <programlisting>

                //referer parameter
                final ClientSecurity refererInfo = new RefererClientSecurity("http://localhost/");

                //token parameter
                final IGNRMServer geodrmServer = new IGNRMServer(new URL("http://jeton-api.ign.fr"),refererInfo);
                final Token token = geodrmServer.getToken(key);
                final ClientSecurity tokenInfo = new TokenClientSecurity(token);
                final ClientSecurity tokenAndReferer = ClientSecurityStack.wrap(refererInfo,tokenInfo);

                //WMSC server
                final WebMapServerCached server = new WebMapServerCached(
                new URL("http://wxs.ign.fr/inspire/wmsc?"), tokenAndReferer);

                //layer
                final WMSCMapLayer layer = new WMSCMapLayer(server, "ORTHOIMAGERY.ORTHOPHOTOS");
                context.layers().add(layer);

                final MapContext context = MapBuilder.createContext();
                context.layers().add(layer);
                JMap2DFrame.show(context);

        </programlisting>
    </example>


</section>
