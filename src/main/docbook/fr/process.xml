<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book [
  <!ENTITY % book.entities SYSTEM "../book.entities">
  %book.entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
         xmlns:xlink = "http://www.w3.org/1999/xlink">
          
    <title>
        Process
    </title>
    
    <para>
        <title>Qu'est ce qu'un process ?</title>
        <para>
            Un process (ou processus), est un traitement effectué sur des données. Ces traitements peuvent être plus ou moins complexes, avec la possibilité de les chaîner pour des applications particulières.
        </para>
        <para>
            Geotoolkit supporte plusieurs type de process sur différents types de données. Les plus simples étant les process du module Math qui proposent l'application de fonctions mathématiques comme cos, tan, avg, ceil, ... etc.
        </para>
        <para>
            Et d'autres plus complexes comme ceux du module Coverage et Vector traitant les couches raster et vectoriel.
        </para>
        <para>
            Dans geotoolkit, un process est défini par  :
            <itemizedlist>
                <listitem> Une registry ou factory cf fr-process-registry.</listitem>
                <listitem> Une description (liste des entrées-sorties du process).</listitem>
                <listitem> Le traitement en lui même.</listitem>
            </itemizedlist>
        </para>
    </para>
    
    <section>
        <title>Utilisation des processus</title>
        <para>
            Exemple complet de l'utilisation d'un processus complexe comme Union :
        </para>
        
        <para>
            <title>Code source complet  : </title>
            <link xlink:href="http://hg.geotoolkit.org/geotoolkit-pending/file/tip/demos/geotk-demo-samples/src/main/java/org/geotoolkit/pending/demo/processing/UnionDemo.java">
                <acronym>geotoolkit-pending/demos/geotk-demo-samples/src/main/java/org/geotoolkit/pending/demo/processing/UnionDemo.java</acronym>
            </link>        
        </para>
        <para>
            Pour utiliser un processus, il faut commencer par récupérer sa description. Pour cela, on utilise la classe utilitaire ProcessFinder qui a des méthodes pour récupérer les registry des process et leurs descriptions.
        </para>
        <para>
            <title>Récupération de la description d'un process</title>
            <code>
                <literallayout>
                    //Récupération de la description du process union appartenant à la factory vector.
                    final ProcessDescriptor descriptor = ProcessFinder.getProcessDescriptor("vector", "union");
                </literallayout>
            </code>
        </para>
        <para>
            Une fois que l'on a sa description, il suffit de passer des valeurs aux paramètres d'entrées.
        </para>
        <para>            
            <title>Paramètres d'entrées</title>
            <code>
                <literallayout>
                    //Récupération des paramètres d'entrées
                    final ParameterValueGroup input = descriptor.getInputDescriptor().createValue();
 
                    //Set des paramètres
                    input.parameter("feature_in").setValue(featureCollection1);
                    input.parameter("feature_union").setValue(featureCollection2);
                    input.parameter("input_geometry_name").setValue("geom1");
                </literallayout>
            </code>
        </para>
        
        <para>
            Lorsque les paramètres d'entrées sont définis, il reste à lancer le processus et à récupérer les paramètres de sorties.
        </para>
        
        <para>
            <title>Lancement processus + Récupération sorties</title>
            <code>
                
                <literallayout>
                    //Création du processus
                    final Process process = descriptor.createProcess(in);
  
                    //Récupération de la sortie feature_out
                    final FeatureCollection&lt;Feature&gt; featuresOut = (FeatureCollection&lt;Feature&gt;);
                    process.call().parameter("feature_out").getValue();
                </literallayout>
            </code>
        </para>
        
        <para>
            <title>Enregistrement des processus</title>

            Il est possible de découvrir quels sont les processus disponibles et aussi d'en enregistrer de nouveaux.
            <para>
                Consulter la page : fr-process-registry
            </para>
        </para>
        
        <para>
            <title>Execution programmée des tâches</title>
        
            Un module est disponible permettant l'execution de tâches en utilisant l'api Quartz.
            <para>
                Consulter la page : process-quartz
            </para>
        </para>
        
        <para>
            <title>Execution en ligne de commande</title>
        
            A la manière des outils gdalinfo et ogr2ogr , les process GeotoolKit sont utilisables en ligne de commande.
            <para>
                Consulter la page : process-shell
            </para>
        </para>
        
        <para>
            <title>Utilisation dans OpenOffice et LibreOffice</title>

            Bien que ne s'appuyant pas directement sur les process, un certain nombre d'operations sont utilisables dans les tableurs LibreOffice et OpenOffice.
            <para>
                Consulter la page : process-xoffice 
            </para>
        </para>
        
    </section>
</chapter>
