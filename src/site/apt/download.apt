Downloading Geotoolkit.org Binaries

  Binary versions of Geotk are available in several different formats. The easiest approach
  to integrate Geotk into a Java project uses the Apache maven dependency management tool to
  automatically obtain the required Java Archives (JAR) files from the network. For convenience
  of users who are not using the maven build tool, Geotk is also distributed as bundles which
  combine components of the library into a single JAR file. Finally, users can download the source
  code and build Geotk themselves to obtain all of the pieces in one shot as explained on the
  {{{build/index.html}building from source}} page.

  To run this code, Geotk requires a properly configured runtime environment as described in
  the {{{run.html}running Geotoolkit.org}} page.


* Maven downloads

  Geotk can be obtained using the Apache's {{{http://maven.apache.org/}Maven}} management
  tool to download Geotk JAR files which have been deployed into the project's
  {{{http://maven.geotoolkit.org/}Maven repository}}.

  The Maven approach provides the following advantages compared to using Geotk bundles:

    * Developers can select only the dependencies they want, thus reducing the total
      size of their application.

    * Developers can add dependencies that are not otherwise included in the bundles,
      for example <<<geotk-logging-log4j.jar>>> which redirect all Geotk loggings to
      the Log4J framework.

    * Developers can reuse the same JAR files accross many projects, thus reducing the
      duplication. For example many independant projects could use the <<<jsr-275.jar>>> file.

    * Maven downloads the JAR files automatically, including the source code in some IDE.
      Snapshots are checked daily for updates.

  Below is an example of declaration in a <<<pom.xml>>> file for building a project with the
  Geotk referencing module and redirect all Geotk loggings to the Log4J framework:

-----------------------------------------------------------------------------------
<properties>
  <!-- Define the version that we want to use here, so
       we have a single line to change when upgrating. -->
  <geotk.version>3.04</geotk.version>
</properties>

<dependencies>
  <dependency>
    <groupId>org.geotoolkit</groupId>
    <artifactId>geotk-referencing</artifactId>
    <version>${geotk.version}</version>
  </dependency>
  <dependency>
    <groupId>org.geotoolkit</groupId>
    <artifactId>geotk-logging-log4j</artifactId>
    <version>${geotk.version}</version>
    <scope>runtime</scope>
  </dependency>
</dependencies>
-----------------------------------------------------------------------------------

  For this example to work, the following repositories must be declared in the root <<<pom.xml>>>
  file.

-----------------------------------------------------------------------------------
<repositories>
  <repository>
    <id>maven2-repository.dev.java.net</id>
    <name>Java.net repository</name>
    <url>http://download.java.net/maven/2</url>
  </repository>
  <repository>
     <id>geotoolkit</id>
     <name>Geotk repository</name>
     <url>http://maven.geotoolkit.org/repository</url>
  </repository>
</repositories>
-----------------------------------------------------------------------------------

  We plan eventually to build a maven artifact to simplify the creation of a maven based project.


* Bundle downloads (everything in a single JAR)

  Geotk can be obtained as single archives which bundles together specific components of the
  library to provide an easy way to get started. A single archive file should be downloaded; when
  uncompressed with the <<<unpack200>>> tool distributed with Java, the archive results in a single
  JAR file which includes the desired components of Geotk along with all the required
  dependencies. Geotk can then be used simply by placing the JAR on the classpath.

  These Geotk bundles can be downloaded from:

    * {{{http://download.geotoolkit.org/}Monthly releases}}

    * {{{http://hudson.geomatys.com/job/Geotoolkit/}Nightly builds (last 2 weeks)}}

  Serveral bundles are available, each one providing successively more functionality. Choose
  <<only one>> of the following <<<pack.gz>>> files:

*----------------------------------------+----------------------------------+-------------------------------+
|| File                                  || Content                         || Prerequites                 ||
*----------------------------------------+----------------------------------+-------------------------------+
| <<<geotk-bundle-referencing.pack.gz>>> | \u2022 vecmath.jar               | \u2022 Java 6                 |
|                                        | \u2022 jsr-275.jar               | \u2022 JavaDB (<optional>)    |
|                                        | \u2022 geoapi-pending.jar        |                               |
|                                        | \u2022 geotk-utility.jar         |                               |
|                                        | \u2022 geotk-metadata.jar        |                               |
|                                        | \u2022 geotk-referencing.jar     |                               |
|                                        | \u2022 geotk-epsg.jar            |                               |
*----------------------------------------+----------------------------------+-------------------------------+
| <<<geotk-bundle-coverage.pack.gz>>>    | <All the referencing pack plus:> | \u2022 Java 6                 |
|                                        | \u2022 geotk-coverage.jar        | \u2022 Java Advanced Imaging  |
|                                        | \u2022 geotk-coverageio.jar      | \u2022 Image I/O extensions   |
*----------------------------------------+----------------------------------+-------------------------------+
| <<<geotk-bundle-catalog.pack.gz>>>     | <All the coverage pack plus:>    | \u2022 Java 6                 |
|                                        | \u2022 geotk-metadata-sql.jar    | \u2022 Java Advanced Imaging  |
|                                        | \u2022 geotk-epsg-javadb.jar     | \u2022 Image I/O extensions   |
|                                        | \u2022 derby.jar                 |                               |
*----------------------------------------+----------------------------------+-------------------------------+
| <<<geotk-bundle.pack.gz>>>             | <All the catalog pack plus:>     | \u2022 Java 6                 |
|                                        | \u2022 jlfgr.jar                 | \u2022 Java Advanced Imaging  |
|                                        | \u2022 swingx.jar                | \u2022 Image I/O extensions   |
|                                        | \u2022 wizard.jar                |                               |
|                                        | \u2022 geotk-setup.jar           |                               |
|                                        | \u2022 geotk-display.jar         |                               |
|                                        | \u2022 geotk-widgets-swing.jar   |                               |
|                                        | \u2022 geotk-wizards-swing.jar   |                               |
*----------------------------------------+----------------------------------+-------------------------------+

  Those files can be unpacked using the <<<unpack200>>> executable provided in the Java
  installation directory.

  For example, users who wish to use the georeferencing functionality of Geotk can select the
  <<<geotk-bundle-referencing-3.04.pack.gz>>> archive for download. Once downloaded, the archive
  can then be expanded with the following command:

-----------------------------------------------------------------------------------
unpack200 geotk-bundle-referencing-3.04.pack.gz geotk-bundle-referencing.jar
-----------------------------------------------------------------------------------

  where the name of the target file, <<<geotk-bundle-referencing.jar>>> in this example, can be any
  name the user wishes.

  The resulting JAR can be tested by running the command:

-----------------------------------------------------------------------------------
java -jar geotk-bundle-referencing.jar help
-----------------------------------------------------------------------------------

  which will run the command line tool for working with the referencing and metadata modules.
